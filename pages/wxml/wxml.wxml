<!--pages/wxml/wxml.wxml-->
<!-- 1.wxml的格式 -->
<!-- <view></view>
<image />
<input />
<view Class="" class=""></view> -->

<!-- 2.Mustache语法 -->
<view>{{msg}}</view>
<view>{{firstName}} {{lastName}}</view>
<view>{{firstName + ' ' + lastName}}</view>
<view>{{age >= 18 ? '成年人' : '未成年人'}}</view>
<view>{{nowTime}}</view>
<button bindtap="handleSwicthColor">切换颜色</button>
<view class="box {{isActive ? 'active' : ''}}">哈哈哈</view>
<!-- 3.条件判断 -->
<!-- wx:if/wx:elif/wx:else -->
<view>-----------条件判断--------------</view>
<button bindtap="handleSwitchShow">切换显示</button>
<view wx:if="{{isShow}}">哈哈哈哈</view>
<button bindtap="handleIncrement">分数递增</button>
<view>{{score}}</view>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>
<!-- 
  hidden属性
  w:if和hidden：
    区别：
      hidden：将一个组件隐藏起来时，该组件依然是存在（display：none）
      w:if：将一个组件隐藏起来市，该组件根本不存在（压根没有创建）
    选择：
      如果显示和隐藏切换的频率非常高，选择使用hidden
      如果显示和隐藏切换的频率非常低，选择使用w:if
 -->
<view hidden="{{false}}">我是hidden属性控制的内容</view>
<view wx:if="{{true}}">我是wx:if属性控制的内容</view>

<view>---------------列表渲染--------------</view>
<!-- 1.wx:for的回顾 -->
<!-- 1.1.遍历数组|字符串|数字 -->
<view wx:for="{{['abc', 'cba', 'nba']}}">{{item}} {{index}}</view>
<view wx:for="coderwhy">{{item}} {{index}}</view>
<view wx:for="{{9}}">{{item}}</view>

<!-- block标签 -->
<view>---------------block标签--------------</view>
<block wx:if="{{isShow}}">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我是内容</text>
</block>
<block wx:for="{{3}}">
  <button>按钮</button>
  <view>呵呵呵</view>
  <text>我是内容</text>
</block>

<!-- 3.item、index起名字 -->
<view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}} {{i}}</view>
<block wx:for="{{nums}}" wx:for-item="inner_item">
  <block wx:for="{{inner_item}}">
    <view>{{item}}</view>
  </block>
</block>

<!-- 4.key的作用 -->
<view class="container">
  <view wx:for="{{letters}}" wx:key="item">{{item}}</view>
</view>
 
 <view>-----------------template-------------</view>
 <!-- 
  之前的时候小程序不支持自定义组件，为了进行代码的复用：template；
  模板中包裹的内容，在没有被使用前，是不会进行任何渲染的；
-->
 <!-- <template name="contentItem">
  <button size="mini">{{btnText}}</button>
  <view>{{content}}</view>
 </template> -->
<import src="/wxml/template.wxml"/>
<import src="/wxml/abc.wxml"/>
<template is="contentItem" data="{{btnText: '按钮', content: '哈哈哈'}}"/>
<template is="contentItem" data="{{btnText: '警告', content: '呵呵呵'}}"/>
<template is="contentItem" data="{{btnText: '点击', content: '嘿嘿嘿'}}"/>
<template is="contentItem" data="{{btnText: '登陆', content: '嘻嘻嘻'}}"/>
<!-- include不可用导入模板 -->
<!-- <include src="/wxml/template.wxml"/>	 -->
<template is="abc"></template>

<!-- 
  关于wxml的导入的两种方式：
    import导入：
      1.主要是导入template
      2.特点：不能进行递归导入
    include引入：
      1.将公共的wxml中的组件抽取到一个文件中
      2.特点：不能导入template/wxs，可以进行递归导入
 -->

<!-- 错误的写法 -->
 <!-- <view>{{25.66666666.toFixed(2)}}</view> -->
 <!-- <view>{{numberToFixed(25.66666666)}}</view> -->
